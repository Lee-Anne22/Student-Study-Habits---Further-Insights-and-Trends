---
Title: Student Study Habits 
Subtitle: Further Insights and Trends
Author: Lee-Anne van der Merwe
format: 
    html: 
        code-fold: true
jupyter: python3
kernal: base
---

# Data Collection and Preparation

## Collection of Data:

The data collected for this project is provided by Kaggle and thorough preparation of this data were done for machine learning models.

```{python}
#Importing all necessary programs
def import_study_libs():
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib.pyplot as plt
    import sklearn as sk
    from sklearn.model_selection import GridSearchCV
    from sklearn.model_selection import StratifiedKFold
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.metrics import accuracy_score
    from sklearn.metrics import confusion_matrix
    from sklearn.metrics import classification_report
    from sklearn.metrics import make_scorer
    import lime as lime
    import shap as shap
    return {"np":np, "pd":pd, "plt":plt, "load_wine":load_wine, "GridSearchCV":GridSearchCV, "StratifiedKFold":StratifiedKFold,
            "RandomForestClassifier":RandomForestClassifier, "accuracy_score": accuracy_score, "confusion_matrix": confusion_matrix,
            "classification_report":classification_report, "make_scorer": make_scorer}

# Loading the data set
file= "student_habits_performance.csv"
def load_study_data():
    try:
        libs= import_study_libs()
        df= pd.read_csv(file, sep=';', **kwargs)
        dfc=df.columns.str.strip() #To clean up data
        print ("Data Loaded Succesfully!")
    except FileNotFoundError:
        print (f"File not found!: {file_path}")
        
```

## Preparation of Data:

Data is prepped by removing missing values, encoding categorical values and normalising numeric variables.

```{python}
# Handle missing Values and duplicates:
def study_clean():
    df_missing= df.fillna(df.mean (numeric_only= True))
    df_duplicates= df_missing.drop_duplicates()
    df_clean= df_duplicates

    print ("Data preprocessed and cleaned!")
    return df_clean
    
    

```

# Data Exploration and Model Building

## Statistical Analysis:

The data was first explored by applied statistical in three ways:

-   Mean study time by Health Tier

-   Correlation between sleep and exam scores

-   Outlier detection

```{python}
# Statistical Analysis
```

## Data Exploration:

Data were explored and the following plots were obtained:

-   Scatter plot

    -   The correlation between exam score and internet quality, diet quality, sleep hours and exercise frequency

-   Stacked bar plot

    -   The difference in categories between the following age groups: 16-18 years, 19-20 years, 21-22 years and 23-24 years.

-   Box/Violin plots

    -   Mental Health rating per age group: 16-18 years, 19-20 years, 21-22 years and 23-24 years.

-   Heatmaps

    -   To gain multivariate insights between categories

-   Parallel Coordinates plots

    -   

-   Radar Charts

    -   The difference in time spent between the following age groups: 16-18 years, 19-20 years, 21-22 years and 23-24 years.

        -   Amount of study hours - study hours

        -   Amount of time spent on social media - social media hours

        -   Amount of time spent on Netflix - netflix hours

        -   Amount of time spent on sleep - sleep hours

```{python}
# Scatter plot 1: Exam score vs Internet Quality

```

```{python}
#Stacked bar plot
```

```{python}
#Violin plot
```

```{python}
#Heatmap
```

```{python}
#Parallel Coordinates plot
```

```{python}
#Radar Charts
```

## Model Building:

The linear regression model and decision tree model were trained for this project:

##### Linear Regression Model

The following categories were considered in the linear regression model:

-   Study hours
-   Sleep hours
-   Social Media hours
-   Netflix hours
-   Exercise frequency
-   Predicted Exam Score

The categories expected to be most profitable were increased to predict the impact on exam score. These categories were: sleep hours, study hours and exercise frequency.

```{python}

```

##### Decision Tree

A decision tree was utilised to predict whether a student would obtain an exam score above 75% or not.

#Note to self: Need to change the following categories:

-   part-time -\> 0 or 1 (binary class)

-   diet quality (multi-class)

-   parental education (multi-class)

-   internet quality (multi-class)

-   extracurricular activity -\> 0 or 1 (binary class)

```{python}

```